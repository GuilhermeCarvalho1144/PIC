;;CURSO DE PIC
;;PROGRAMA 22...ESSE PROGRAM FOI DESENVOLVIDO PARA QUE O CONCEITO DE CLICO DE MAQUINA FOSSE COMPREENDIDO...ESSE PROGRA É UM BLINK EM ASSEMBLY
;;ESS PROGRA FOI DESENVOLVIDO NO PIC16F628A COM CLOCK DE 4MHz E CICLO DE MAQUINA = 1 / (CLOCK/4) = 1us
;;MAIS INFORMAÇÕES NO LINK: https://www.youtube.com/watch?v=Kp52X4iwxTM&index=22&list=PLZ8dBTV2_5HQ-LrS9r1dP30h8n9sh04gh
;;GUILHERME CARVALHO

;;INICIO DO CODIGO

list p = 16f628a

#include <p16f628a.inc>
	
;;CONFIGURANDO OS FUSES DO PROCESSADOR
	 __config _INTOSC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _BOREN_OFF & _LVP_OFF & DATA_CP_OFF & _CP_OFF

;;MAPEAMENTO DE MEMÓRIA -> BANCOS DE MEMÓRIA
#define bank0 bcf STATUS,RP0	;;LIMPA RPA...OU SEJA RP0 = 0
#define bank1 bsf STATUS,RP0	;;COLOCA NÍVEL LOGICO ALTO EM RPA...OU SEJA RP0 = 1

;;MAPEANDO A SAÍDA
#define output PORTA,0		;;COLOCA A LABEL OUTPUT RM RA0

;;DEFINDO A POSIÇÃO INICIAL DO PROGRAMA (VETOR DE RESET)
	org 0x00		;;ORIGEM NO ENDEREÇO 0x00 (VETOR DE RESET)
	goto setup		;;VAI PATA AS LABELS DE CONFIGURAÇÕES DO MCU

;;DEFININDO O VETOR DE INTERRUPÇÃO ***NÃO É UTILIZADO NESSE PROGRAMA***
	org 0x04		;;ORIGEM DA INTERUPÇÃO NO ENDEREÇO 0x04 (VETOR DE INTERUPÇÃO)
	retfie			;;RETORNA DA INTERRUPÇÃO

;;DECLARANDO AS VARIAVEIS
	cblock 0x20		;;INICIO DA DECLARAÇÃO...ENDEREÇO ONDE SE INICIA OS REGISTRADORES PARA SE GUARDAR AS VARIAVEIS..,CADA VARIAVEL PODE ARMAZENAR 8 BITS (2^8 = 256..O ZERO CONTA ENTAO VALORE DE 0 -> 255)
		timmer0		;;VARIÁVEL DE TEMPORIZAÇÃO 0
		timmer1		;;VARIÁVEL DE TEMPORIZAÇÃO 1
	endc			;;FIM DA DECLARAÇÃO
	

;;CONFIGURANDO O MCU
setup:
	bank1			;;SELECIONA O BANCO 1 DA MEMÓRIA
	movlw 0x00		;;MOVE O VALOR 0x00 PARA O REGISTRADOR DE TRABALHO (W)
	movwf TRISA		;;MOVE W PARA TRISA FAZENDO RA0 SER SAIDA DIGITAL
	bank0			;;SELECIONA O BANCO 0 DA MEMÓRIA
	movlw 0x00		;;MOVE 0x00 PARA O RESGISTRADOR DE TRABALHO (W)
	movwf PORTA		;;MOVE W PARA PORTA...INICIALIZANDO PORTA
	movlw 0x07		;;MOVE 0x07 PARA O REGISTRADOR DE TRABALHO (W)
	movwf CMCON		;;MOVE W PARA CMCON...DESABILITA OS COMPARADORES
 
;;INICIO DO LOOP PRINCIPAL
loop:
	bsf output		;;SETA O OUTPUT EM NIVEL HIGH
	call delay		;;CHAMA SUBROTINA
	bcf output		;;SETA O OUTPUT EM NIVEL LOW
	call delay		;;CHAMA A SUBROTINA
	goto loop		;;VAI PARA A LABEL LOOP...FAZENDO UM LOOP INFINITO

delay:				;SUB ROTINA QUE GERA O DELAY DE 500ms COM BASE NO CICLO DE MAQUINA
	movlw .200		;;MOVE 00 PARA W
	movwf timmer0		;;INICIALIZA A VARIÁVEL TIMMER0
				;;GASTAM 4 CICLOS DE MAQUINA
	
aux1:				;;LABEL AUXILIAR1
	movlw .250		;;MOVE 00 PARA W
	movwf timmer1		;;INICIALIZA A VARIÁVEL TIMMER1
				;;GASTAM 2 CICLOS DE MAQUINA

aux2:				;;LABEL AUXILIAR2
	nop			;;GASTAM 1 CICLO DE MÁQUINA
	nop			;;...
	nop
	nop
	nop
	nop
	nop			;;...
	decfsz timmer1		;;DECREMENTA TIMMER1 ATE QUE SEJA 0...QUANDO IGUAL A 0 PULA A LINHA ABAIXO
	goto aux2		;;VAI PARA LABEL AUXILIAR2...2 CLICOS DE MAQUINA PARA EXECUTAR
				;;ESSE LAÇO SE REPETE 250 VEZES
				;;GASTAM 250 * 10 = 2500
	decfsz timmer0		;;DECREMENTA TIMMER0 ATE QUE SEJA 0...QUANDO IGUAL A 0 PULA A LINHA ABAIXO
	goto aux1		;;VAI PARA LABEL AUXILIAR1...2 CICLOS DE MAQUINA PARA EXECUTAR
				;;GASTAM 2500*200 = 500000
	return			;;RETORNA AO LOOP PRINCIPAL
	
		

	

	end			;;FIM DO PROGRAMA
	
