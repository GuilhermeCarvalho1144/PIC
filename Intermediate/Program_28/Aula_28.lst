;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09-Apr-17 8:54:46 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28DB      	GOTO       219
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Aula_28.c,30 :: 		void interrupt(){//A VERREDURA DOS BOTÕES OCORRE APROXIMADAMENTE A CADA 20ms
;Aula_28.c,31 :: 		if(T0IF_bit){//TESTA SE HOUVE INTERRUPÇÃO POR ESTOURO DO TIMER 0
0x000B	0x1D0B      	BTFSS      T0IF_bit, 2
0x000C	0x2878      	GOTO       L_interrupt0
;Aula_28.c,32 :: 		T0IF_bit = 0x00;    //LIMPA A FLAG DE INTERRUPÇÃO DO TIMER 0...***IMPORTANTE***
0x000D	0x110B      	BCF        T0IF_bit, 2
;Aula_28.c,33 :: 		TMR0 = 0x6C;        //DEFINE O VALOR DE TIMER 0
0x000E	0x306C      	MOVLW      108
0x000F	0x0081      	MOVWF      TMR0
;Aula_28.c,34 :: 		if(col1 && controle == 0x01){//TESTA A COLUNA 1
0x0010	0x1C86      	BTFSS      RB1_bit, 1
0x0011	0x2833      	GOTO       L_interrupt3
0x0012	0x0820      	MOVF       _controle, 0
0x0013	0x3A01      	XORLW      1
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2833      	GOTO       L_interrupt3
L__interrupt49:
;Aula_28.c,35 :: 		controle = 0x02;            //SETA O CONTROLE PARA QUE A COLUNA 2 SEJA TESTADA
0x0016	0x3002      	MOVLW      2
0x0017	0x00A0      	MOVWF      _controle
;Aula_28.c,36 :: 		col1 = 0x00;                //DEFINE A COLUNA 1 COMO 0...RESISTORES DE PULL-UP
0x0018	0x1086      	BCF        RB1_bit, 1
;Aula_28.c,37 :: 		col2 = 0x01;
0x0019	0x1506      	BSF        RB2_bit, 2
;Aula_28.c,38 :: 		col3 = 0x01;
0x001A	0x1586      	BSF        RB3_bit, 3
;Aula_28.c,39 :: 		if(!rowA) pulsar(1);
0x001B	0x1A06      	BTFSC      RB4_bit, 4
0x001C	0x2821      	GOTO       L_interrupt4
0x001D	0x3001      	MOVLW      1
0x001E	0x00A6      	MOVWF      FARG_pulsar_n
0x001F	0x2092      	CALL       _pulsar
0x0020	0x2832      	GOTO       L_interrupt5
L_interrupt4:
;Aula_28.c,40 :: 		else if(!rowB)pulsar(4);
0x0021	0x1A86      	BTFSC      RB5_bit, 5
0x0022	0x2827      	GOTO       L_interrupt6
0x0023	0x3004      	MOVLW      4
0x0024	0x00A6      	MOVWF      FARG_pulsar_n
0x0025	0x2092      	CALL       _pulsar
0x0026	0x2832      	GOTO       L_interrupt7
L_interrupt6:
;Aula_28.c,41 :: 		else if(!rowC)pulsar(7);
0x0027	0x1B06      	BTFSC      RB6_bit, 6
0x0028	0x282D      	GOTO       L_interrupt8
0x0029	0x3007      	MOVLW      7
0x002A	0x00A6      	MOVWF      FARG_pulsar_n
0x002B	0x2092      	CALL       _pulsar
0x002C	0x2832      	GOTO       L_interrupt9
L_interrupt8:
;Aula_28.c,42 :: 		else if(!rowD)pulsar(11);
0x002D	0x1B86      	BTFSC      RB7_bit, 7
0x002E	0x2832      	GOTO       L_interrupt10
0x002F	0x300B      	MOVLW      11
0x0030	0x00A6      	MOVWF      FARG_pulsar_n
0x0031	0x2092      	CALL       _pulsar
L_interrupt10:
L_interrupt9:
L_interrupt7:
L_interrupt5:
;Aula_28.c,43 :: 		}
0x0032	0x2878      	GOTO       L_interrupt11
L_interrupt3:
;Aula_28.c,44 :: 		else if(col2 && controle == 0x02){
0x0033	0x1D06      	BTFSS      RB2_bit, 2
0x0034	0x2856      	GOTO       L_interrupt14
0x0035	0x0820      	MOVF       _controle, 0
0x0036	0x3A02      	XORLW      2
0x0037	0x1D03      	BTFSS      STATUS, 2
0x0038	0x2856      	GOTO       L_interrupt14
L__interrupt48:
;Aula_28.c,45 :: 		controle  = 0x03;           //SETA O CONTROLE PARA QUE A COLUNA 3 SEJA TESTADA
0x0039	0x3003      	MOVLW      3
0x003A	0x00A0      	MOVWF      _controle
;Aula_28.c,46 :: 		col1 = 0x01;
0x003B	0x1486      	BSF        RB1_bit, 1
;Aula_28.c,47 :: 		col2 = 0x00;                //DEFINE A COLUNA 2 COMO 0...RESISTORES DE PULL-UP
0x003C	0x1106      	BCF        RB2_bit, 2
;Aula_28.c,48 :: 		col3 = 0x01;
0x003D	0x1586      	BSF        RB3_bit, 3
;Aula_28.c,49 :: 		if(!rowA) pulsar(2);
0x003E	0x1A06      	BTFSC      RB4_bit, 4
0x003F	0x2844      	GOTO       L_interrupt15
0x0040	0x3002      	MOVLW      2
0x0041	0x00A6      	MOVWF      FARG_pulsar_n
0x0042	0x2092      	CALL       _pulsar
0x0043	0x2855      	GOTO       L_interrupt16
L_interrupt15:
;Aula_28.c,50 :: 		else if(!rowB)pulsar(5);
0x0044	0x1A86      	BTFSC      RB5_bit, 5
0x0045	0x284A      	GOTO       L_interrupt17
0x0046	0x3005      	MOVLW      5
0x0047	0x00A6      	MOVWF      FARG_pulsar_n
0x0048	0x2092      	CALL       _pulsar
0x0049	0x2855      	GOTO       L_interrupt18
L_interrupt17:
;Aula_28.c,51 :: 		else if(!rowC)pulsar(8);
0x004A	0x1B06      	BTFSC      RB6_bit, 6
0x004B	0x2850      	GOTO       L_interrupt19
0x004C	0x3008      	MOVLW      8
0x004D	0x00A6      	MOVWF      FARG_pulsar_n
0x004E	0x2092      	CALL       _pulsar
0x004F	0x2855      	GOTO       L_interrupt20
L_interrupt19:
;Aula_28.c,52 :: 		else if(!rowD)pulsar(10);
0x0050	0x1B86      	BTFSC      RB7_bit, 7
0x0051	0x2855      	GOTO       L_interrupt21
0x0052	0x300A      	MOVLW      10
0x0053	0x00A6      	MOVWF      FARG_pulsar_n
0x0054	0x2092      	CALL       _pulsar
L_interrupt21:
L_interrupt20:
L_interrupt18:
L_interrupt16:
;Aula_28.c,53 :: 		}
0x0055	0x2878      	GOTO       L_interrupt22
L_interrupt14:
;Aula_28.c,54 :: 		else if(col3 && controle == 0x03){
0x0056	0x1D86      	BTFSS      RB3_bit, 3
0x0057	0x2878      	GOTO       L_interrupt25
0x0058	0x0820      	MOVF       _controle, 0
0x0059	0x3A03      	XORLW      3
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x2878      	GOTO       L_interrupt25
L__interrupt47:
;Aula_28.c,55 :: 		controle = 0x01;            //SETA O CONTROLE PARA QUE A COLUNA 1 SEJA TESTADA
0x005C	0x3001      	MOVLW      1
0x005D	0x00A0      	MOVWF      _controle
;Aula_28.c,56 :: 		col1 = 0x01;
0x005E	0x1486      	BSF        RB1_bit, 1
;Aula_28.c,57 :: 		col2 = 0x01;
0x005F	0x1506      	BSF        RB2_bit, 2
;Aula_28.c,58 :: 		col3 = 0x00;                //DEFINE A COLUNA 3 COMO 0...RESISTORES DE PULL-UP
0x0060	0x1186      	BCF        RB3_bit, 3
;Aula_28.c,59 :: 		if(!rowA) pulsar(3);
0x0061	0x1A06      	BTFSC      RB4_bit, 4
0x0062	0x2867      	GOTO       L_interrupt26
0x0063	0x3003      	MOVLW      3
0x0064	0x00A6      	MOVWF      FARG_pulsar_n
0x0065	0x2092      	CALL       _pulsar
0x0066	0x2878      	GOTO       L_interrupt27
L_interrupt26:
;Aula_28.c,60 :: 		else if(!rowB)pulsar(6);
0x0067	0x1A86      	BTFSC      RB5_bit, 5
0x0068	0x286D      	GOTO       L_interrupt28
0x0069	0x3006      	MOVLW      6
0x006A	0x00A6      	MOVWF      FARG_pulsar_n
0x006B	0x2092      	CALL       _pulsar
0x006C	0x2878      	GOTO       L_interrupt29
L_interrupt28:
;Aula_28.c,61 :: 		else if(!rowC)pulsar(9);
0x006D	0x1B06      	BTFSC      RB6_bit, 6
0x006E	0x2873      	GOTO       L_interrupt30
0x006F	0x3009      	MOVLW      9
0x0070	0x00A6      	MOVWF      FARG_pulsar_n
0x0071	0x2092      	CALL       _pulsar
0x0072	0x2878      	GOTO       L_interrupt31
L_interrupt30:
;Aula_28.c,62 :: 		else if(!rowD)pulsar(12);
0x0073	0x1B86      	BTFSC      RB7_bit, 7
0x0074	0x2878      	GOTO       L_interrupt32
0x0075	0x300C      	MOVLW      12
0x0076	0x00A6      	MOVWF      FARG_pulsar_n
0x0077	0x2092      	CALL       _pulsar
L_interrupt32:
L_interrupt31:
L_interrupt29:
L_interrupt27:
;Aula_28.c,63 :: 		}
L_interrupt25:
L_interrupt22:
L_interrupt11:
;Aula_28.c,64 :: 		}
L_interrupt0:
;Aula_28.c,65 :: 		}
L__interrupt50:
0x0078	0x0825      	MOVF       ___savePCLATH, 0
0x0079	0x008A      	MOVWF      PCLATH
0x007A	0x0E24      	SWAPF      ___saveSTATUS, 0
0x007B	0x0083      	MOVWF      STATUS
0x007C	0x0EFF      	SWAPF      R15, 1
0x007D	0x0E7F      	SWAPF      R15, 0
0x007E	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x007F	0x1283      	BCF        STATUS, 5
0x0080	0x1303      	BCF        STATUS, 6
0x0081	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0082	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0083	0x0821      	MOVF       ___DoICPAddr, 0
0x0084	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x0085	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0086	0x207F      	CALL       _____DoICP
0x0087	0x118A      	BCF        PCLATH, 3
0x0088	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0089	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x008A	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x008B	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x008C	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x008D	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x008E	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x008F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0090	0x2886      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0091	0x0008      	RETURN
; end of ___CC2DW
_pulsar:
;Aula_28.c,95 :: 		void pulsar (char n){
;Aula_28.c,97 :: 		for(i = 0 ; i < n ; i++){              //LOOP FOR
0x0092	0x1283      	BCF        STATUS, 5
0x0093	0x1303      	BCF        STATUS, 6
0x0094	0x01F1      	CLRF       R1
L_pulsar37:
0x0095	0x0826      	MOVF       FARG_pulsar_n, 0
0x0096	0x0271      	SUBWF      R1, 0
0x0097	0x1803      	BTFSC      STATUS, 0
0x0098	0x28DA      	GOTO       L_pulsar38
;Aula_28.c,98 :: 		if(!led){                     //BLINKAR LED1
0x0099	0x0823      	MOVF       _led, 0
0x009A	0x1D03      	BTFSS      STATUS, 2
0x009B	0x28B9      	GOTO       L_pulsar40
;Aula_28.c,99 :: 		LED1 = 0x01;                  //DEFINE LED1 COM LIVEL ALTO
0x009C	0x1505      	BSF        RA2_bit, 2
;Aula_28.c,100 :: 		delay_ms(200);                //DELAY
0x009D	0x3002      	MOVLW      2
0x009E	0x00FB      	MOVWF      R11
0x009F	0x3004      	MOVLW      4
0x00A0	0x00FC      	MOVWF      R12
0x00A1	0x30BA      	MOVLW      186
0x00A2	0x00FD      	MOVWF      R13
L_pulsar41:
0x00A3	0x0BFD      	DECFSZ     R13, 1
0x00A4	0x28A3      	GOTO       L_pulsar41
0x00A5	0x0BFC      	DECFSZ     R12, 1
0x00A6	0x28A3      	GOTO       L_pulsar41
0x00A7	0x0BFB      	DECFSZ     R11, 1
0x00A8	0x28A3      	GOTO       L_pulsar41
0x00A9	0x0000      	NOP
;Aula_28.c,101 :: 		LED1 = 0x00;                  //DEFINE O LED1 COM NIVEL BAIXO
0x00AA	0x1105      	BCF        RA2_bit, 2
;Aula_28.c,102 :: 		delay_ms(200);                //DELAY
0x00AB	0x3002      	MOVLW      2
0x00AC	0x00FB      	MOVWF      R11
0x00AD	0x3004      	MOVLW      4
0x00AE	0x00FC      	MOVWF      R12
0x00AF	0x30BA      	MOVLW      186
0x00B0	0x00FD      	MOVWF      R13
L_pulsar42:
0x00B1	0x0BFD      	DECFSZ     R13, 1
0x00B2	0x28B1      	GOTO       L_pulsar42
0x00B3	0x0BFC      	DECFSZ     R12, 1
0x00B4	0x28B1      	GOTO       L_pulsar42
0x00B5	0x0BFB      	DECFSZ     R11, 1
0x00B6	0x28B1      	GOTO       L_pulsar42
0x00B7	0x0000      	NOP
;Aula_28.c,103 :: 		}
0x00B8	0x28D8      	GOTO       L_pulsar43
L_pulsar40:
;Aula_28.c,104 :: 		else if(led){                          //BLINKAR LED2
0x00B9	0x0823      	MOVF       _led, 0
0x00BA	0x1903      	BTFSC      STATUS, 2
0x00BB	0x28D8      	GOTO       L_pulsar44
;Aula_28.c,105 :: 		LED2 = 0x01;                  //DEFINE LED2 COM LIVEL ALTO
0x00BC	0x1585      	BSF        RA3_bit, 3
;Aula_28.c,106 :: 		delay_ms(200);                //DELAY
0x00BD	0x3002      	MOVLW      2
0x00BE	0x00FB      	MOVWF      R11
0x00BF	0x3004      	MOVLW      4
0x00C0	0x00FC      	MOVWF      R12
0x00C1	0x30BA      	MOVLW      186
0x00C2	0x00FD      	MOVWF      R13
L_pulsar45:
0x00C3	0x0BFD      	DECFSZ     R13, 1
0x00C4	0x28C3      	GOTO       L_pulsar45
0x00C5	0x0BFC      	DECFSZ     R12, 1
0x00C6	0x28C3      	GOTO       L_pulsar45
0x00C7	0x0BFB      	DECFSZ     R11, 1
0x00C8	0x28C3      	GOTO       L_pulsar45
0x00C9	0x0000      	NOP
;Aula_28.c,107 :: 		LED2 = 0x00;                  //DEFINE O LED2 COM NIVEL BAIXO
0x00CA	0x1185      	BCF        RA3_bit, 3
;Aula_28.c,108 :: 		delay_ms(200);                //DELAY
0x00CB	0x3002      	MOVLW      2
0x00CC	0x00FB      	MOVWF      R11
0x00CD	0x3004      	MOVLW      4
0x00CE	0x00FC      	MOVWF      R12
0x00CF	0x30BA      	MOVLW      186
0x00D0	0x00FD      	MOVWF      R13
L_pulsar46:
0x00D1	0x0BFD      	DECFSZ     R13, 1
0x00D2	0x28D1      	GOTO       L_pulsar46
0x00D3	0x0BFC      	DECFSZ     R12, 1
0x00D4	0x28D1      	GOTO       L_pulsar46
0x00D5	0x0BFB      	DECFSZ     R11, 1
0x00D6	0x28D1      	GOTO       L_pulsar46
0x00D7	0x0000      	NOP
;Aula_28.c,109 :: 		}
L_pulsar44:
L_pulsar43:
;Aula_28.c,97 :: 		for(i = 0 ; i < n ; i++){              //LOOP FOR
0x00D8	0x0AF1      	INCF       R1, 1
;Aula_28.c,110 :: 		}
0x00D9	0x2895      	GOTO       L_pulsar37
L_pulsar38:
;Aula_28.c,111 :: 		}
0x00DA	0x0008      	RETURN
; end of _pulsar
_main:
0x00DB	0x3001      	MOVLW      1
0x00DC	0x1283      	BCF        STATUS, 5
0x00DD	0x1303      	BCF        STATUS, 6
0x00DE	0x00A0      	MOVWF      _controle
;Aula_28.c,68 :: 		void main() {
;Aula_28.c,70 :: 		CMCON = 0x07;                  //DESABILITA OS COMPARADORES
0x00DF	0x3007      	MOVLW      7
0x00E0	0x1683      	BSF        STATUS, 5
0x00E1	0x009C      	MOVWF      CMCON
;Aula_28.c,72 :: 		OPTION_REG = 0x86;             //DESABILITA OS RESISTORES DE PULL-UP
0x00E2	0x3086      	MOVLW      134
0x00E3	0x0081      	MOVWF      OPTION_REG
;Aula_28.c,75 :: 		GIE_bit = 0x01;                //HABILITA AS INTERRUPÇÕES GLOBAIS
0x00E4	0x178B      	BSF        GIE_bit, 7
;Aula_28.c,76 :: 		PEIE_bit = 0x01;               //HABILITA AS INTERUPÇÕES POR PERIFERIOS
0x00E5	0x170B      	BSF        PEIE_bit, 6
;Aula_28.c,77 :: 		T0IE_bit = 0x01;               //HABILITA A INTERRUPÇÃO POR ESTOURO DO TIMER 0
0x00E6	0x168B      	BSF        T0IE_bit, 5
;Aula_28.c,78 :: 		TMR0 = 0x6C;                   //INICIA O TIMER 0...VALOR DEFINIDO PARA UMA VARREDURA DE 20ms
0x00E7	0x306C      	MOVLW      108
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x0081      	MOVWF      TMR0
;Aula_28.c,80 :: 		TRISA = 0x03;                  //DEFINE RA0 E RA1 COMO ENTRADA DIGITAIS
0x00EA	0x3003      	MOVLW      3
0x00EB	0x1683      	BSF        STATUS, 5
0x00EC	0x0085      	MOVWF      TRISA
;Aula_28.c,81 :: 		TRISB = 0xF0;                  //DEFINE NIBBLE MAIS SIGNIFICATIVO COMO ENTRADA DIGITAL
0x00ED	0x30F0      	MOVLW      240
0x00EE	0x0086      	MOVWF      TRISB
;Aula_28.c,82 :: 		PORTA = 0x03;                  //INICIA O PORTA
0x00EF	0x3003      	MOVLW      3
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x0085      	MOVWF      PORTA
;Aula_28.c,83 :: 		PORTB = 0xFF;                  //INICIA O PORTB
0x00F2	0x30FF      	MOVLW      255
0x00F3	0x0086      	MOVWF      PORTB
;Aula_28.c,84 :: 		while(1){//NEM SEMPRE FUNCIONA POIS A INTERRUPÇÃO TOMA MTO TEMPO
L_main33:
;Aula_28.c,85 :: 		if(!S1) led = 0x00;   //BLINKA LED1
0x00F4	0x1805      	BTFSC      RA0_bit, 0
0x00F5	0x28F7      	GOTO       L_main35
0x00F6	0x01A3      	CLRF       _led
L_main35:
;Aula_28.c,86 :: 		if(!S2) led = 0x01;   //BLINKA LED2
0x00F7	0x1885      	BTFSC      RA1_bit, 1
0x00F8	0x28FB      	GOTO       L_main36
0x00F9	0x3001      	MOVLW      1
0x00FA	0x00A3      	MOVWF      _led
L_main36:
;Aula_28.c,87 :: 		}
0x00FB	0x28F4      	GOTO       L_main33
;Aula_28.c,88 :: 		}
0x00FC	0x28FC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [123]    _interrupt
0x007F       [7]    _____DoICP
0x0086      [12]    ___CC2DW
0x0092      [73]    _pulsar
0x00DB      [34]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0003       [0]    RP1_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [0]    Z_bit
0x0003       [0]    RP0_bit
0x0003       [0]    NOT_PD_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA3_bit
0x0005       [0]    RA1_bit
0x0005       [1]    PORTA
0x0005       [0]    RA4_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB0_bit
0x0006       [1]    PORTB
0x0006       [0]    RB1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [1]    PORTC
0x0007       [0]    RC5_bit
0x0007       [0]    RC4_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD7_bit
0x0008       [0]    RD2_bit
0x0008       [1]    PORTD
0x0008       [0]    RD0_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD3_bit
0x0009       [0]    RE1_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE0_bit
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IE_bit
0x000B       [1]    INTCON
0x000B       [0]    RBIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    RBIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [1]    PIR1
0x000C       [0]    PSPIF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    TMR2IF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [1]    T1CON
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS1_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    T2CKPS0_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM3_bit
0x0014       [0]    CKP_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    WCOL_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPOV_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M1_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RC9_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    OERR_bit
0x0018       [0]    FERR_bit
0x0018       [0]    ADDEN_bit
0x0018       [1]    RCSTA
0x0018       [0]    RCD8_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    RC8_9_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M2_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2X_bit
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2M3_bit
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x001F       [0]    CHS2_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    ADCS0_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_bit
0x001F       [0]    NOT_DONE_bit
0x0020       [1]    _controle
0x0021       [2]    ___DoICPAddr
0x0023       [1]    _led
0x0024       [1]    ___saveSTATUS
0x0025       [1]    ___savePCLATH
0x0026       [1]    FARG_pulsar_n
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS2_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA4_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB6_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD3_bit
0x0089       [0]    IBOV_bit
0x0089       [0]    OBF_bit
0x0089       [0]    PSPMODE_bit
0x0089       [0]    TRISE0_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    OBF_TRISE_bit
0x0089       [0]    IBF_TRISE_bit
0x0089       [0]    IBOV_TRISE_bit
0x0089       [0]    PSPMODE_TRISE_bit
0x0089       [0]    IBF_bit
0x0089       [0]    TRISE2_bit
0x0089       [1]    TRISE
0x008C       [0]    TMR2IE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    CCP1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    PSPIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TXIE_bit
0x008D       [1]    PIE2
0x008D       [0]    BCLIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    CMIE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BOR_bit
0x0091       [0]    PEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    RSEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    SEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    GCEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    R_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    UA_bit
0x0094       [0]    BF_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    R_W_bit
0x0094       [0]    D_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    CKE_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    SMP_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    P_bit
0x0094       [0]    D_A_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TRMT_bit
0x0098       [1]    TXSTA
0x0098       [0]    TXD8_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TX8_9_bit
0x0099       [1]    SPBRG
0x009C       [0]    CM2_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    CIS_bit
0x009C       [0]    C2INV_bit
0x009C       [0]    C1INV_bit
0x009C       [0]    CM1_bit
0x009C       [0]    CM0_bit
0x009C       [0]    C2OUT_bit
0x009C       [1]    CMCON
0x009D       [1]    CVRCON
0x009D       [0]    CVREN_bit
0x009D       [0]    CVR2_bit
0x009D       [0]    CVR1_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVROE_bit
0x009D       [0]    CVRR_bit
0x009E       [1]    ADRESL
0x009F       [0]    ADFM_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    PCFG3_bit
0x009F       [0]    PCFG2_bit
0x009F       [1]    ADCON1
0x009F       [0]    PCFG0_bit
0x009F       [0]    PCFG1_bit
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    RD_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    WR_bit
0x018C       [0]    WREN_bit
0x018C       [1]    EECON1
0x018C       [0]    EEPGD_bit
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_main33
  L_main34
  L_main35
  L_main36
  L_pulsar37
  L_pulsar38
  L_pulsar39
  L_pulsar40
  L_pulsar41
  L_pulsar42
  L_pulsar43
  L_pulsar44
  L_pulsar45
  L_pulsar46
  L__interrupt47
  L__interrupt48
  L__interrupt49
  _interrupt
  L__interrupt50
  _main
  _pulsar
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_main33
  L_main34
  L_main35
  L_main36
  L_pulsar37
  L_pulsar38
  L_pulsar39
  L_pulsar40
  L_pulsar41
  L_pulsar42
  L_pulsar43
  L_pulsar44
  L_pulsar45
  L_pulsar46
  L__interrupt47
  L__interrupt48
  L__interrupt49
  _interrupt
  L__interrupt50
  _main
  _pulsar
